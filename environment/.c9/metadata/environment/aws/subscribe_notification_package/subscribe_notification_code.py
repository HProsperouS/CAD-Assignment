{"filter":false,"title":"subscribe_notification_code.py","tooltip":"/aws/subscribe_notification_package/subscribe_notification_code.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":25,"column":4},"end":{"row":25,"column":8},"action":"insert","lines":["    "],"id":11}],[{"start":{"row":0,"column":0},"end":{"row":53,"column":0},"action":"remove","lines":["import json","import pymysql","import os","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","","def lambda_handler(event, context):","    try:","        # Retrieve form data from the event","        request_body = json.loads(event['body'])","        name = request_body.get('Name', '')","        email = request_body.get('Email', '')","        category = request_body.get('Category', '')","","        # Initialize the database connection","        connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","    ","        with connection.cursor() as cursor:","            # Execute the SQL query to insert subscriber data into the database","            cursor.execute(\"INSERT INTO NotificationSubscribers (Name, Email, Category) VALUES (%s, %s, %s)\",","                           (name, email, category))","        ","        # Commit the changes to the database","        connection.commit()","","        # Return a successful response","        return {","            'statusCode': 200,","            'body': json.dumps({\"message\": \"Subscription successful.\"}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    except Exception as e:","        # Handle exceptions and return a JSON error response","        error_message = str(e)","        return {","            'statusCode': 500,","            'body': json.dumps({\"error\": error_message}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    finally:","        # Make sure to close the database connection","        if 'connection' in locals() and connection is not None:","            connection.close()",""],"id":12}],[{"start":{"row":0,"column":0},"end":{"row":62,"column":0},"action":"insert","lines":["import json","import pymysql","import os","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","","def lambda_handler(event, context):","    try:","        # Retrieve form data from the event","        request_body = json.loads(event['body'])","        name = request_body.get('Name', '')","        email = request_body.get('Email', '')","        category = request_body.get('Category', '')","","        # Initialize the database connection","        connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","","        with connection.cursor() as cursor:","            # Check if the email already exists in the database","            cursor.execute(\"SELECT Id FROM NotificationSubscribers WHERE Email = %s\", (email,))","            existing_subscriber = cursor.fetchone()","","            if existing_subscriber:","                # Email already exists, update the name and category","                cursor.execute(\"UPDATE NotificationSubscribers SET Name = %s, Category = %s WHERE Email = %s\",","                               (name, category, email))","            else:","                # Email does not exist, insert a new record","                cursor.execute(\"INSERT INTO NotificationSubscribers (Name, Email, Category) VALUES (%s, %s, %s)\",","                               (name, email, category))","","        # Commit the changes to the database","        connection.commit()","","        # Return a successful response","        return {","            'statusCode': 200,","            'body': json.dumps({\"message\": \"Subscription successful.\"}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    except Exception as e:","        # Handle exceptions and return a JSON error response","        error_message = str(e)","        return {","            'statusCode': 500,","            'body': json.dumps({\"error\": error_message}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    finally:","        # Make sure to close the database connection","        if 'connection' in locals() and connection is not None:","            connection.close()",""],"id":13}],[{"start":{"row":13,"column":9},"end":{"row":13,"column":20},"action":"remove","lines":["equest_body"],"id":14},{"start":{"row":13,"column":8},"end":{"row":13,"column":9},"action":"remove","lines":["r"]}],[{"start":{"row":13,"column":8},"end":{"row":13,"column":9},"action":"insert","lines":["f"],"id":15},{"start":{"row":13,"column":9},"end":{"row":13,"column":10},"action":"insert","lines":["o"]},{"start":{"row":13,"column":10},"end":{"row":13,"column":11},"action":"insert","lines":["r"]},{"start":{"row":13,"column":11},"end":{"row":13,"column":12},"action":"insert","lines":["m"]},{"start":{"row":13,"column":12},"end":{"row":13,"column":13},"action":"insert","lines":["d"]},{"start":{"row":13,"column":13},"end":{"row":13,"column":14},"action":"insert","lines":["a"]},{"start":{"row":13,"column":14},"end":{"row":13,"column":15},"action":"insert","lines":["t"]},{"start":{"row":13,"column":15},"end":{"row":13,"column":16},"action":"insert","lines":["a"]}],[{"start":{"row":13,"column":12},"end":{"row":13,"column":13},"action":"insert","lines":["_"],"id":16}],[{"start":{"row":13,"column":21},"end":{"row":13,"column":31},"action":"remove","lines":["son.loads("],"id":17},{"start":{"row":13,"column":20},"end":{"row":13,"column":21},"action":"remove","lines":["j"]}],[{"start":{"row":13,"column":33},"end":{"row":13,"column":34},"action":"remove","lines":[")"],"id":18},{"start":{"row":13,"column":32},"end":{"row":13,"column":33},"action":"remove","lines":["]"]},{"start":{"row":13,"column":31},"end":{"row":13,"column":32},"action":"remove","lines":["'"]},{"start":{"row":13,"column":30},"end":{"row":13,"column":31},"action":"remove","lines":["y"]},{"start":{"row":13,"column":29},"end":{"row":13,"column":30},"action":"remove","lines":["d"]},{"start":{"row":13,"column":28},"end":{"row":13,"column":29},"action":"remove","lines":["o"]},{"start":{"row":13,"column":27},"end":{"row":13,"column":28},"action":"remove","lines":["b"]},{"start":{"row":13,"column":26},"end":{"row":13,"column":27},"action":"remove","lines":["'"]},{"start":{"row":13,"column":25},"end":{"row":13,"column":26},"action":"remove","lines":["["]}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":43},"action":"remove","lines":["request_body.get('Name', '')"],"id":19}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"insert","lines":["f"],"id":20},{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"insert","lines":["o"]},{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"insert","lines":["r"]},{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"insert","lines":["m"]}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":19},"action":"remove","lines":["form"],"id":21},{"start":{"row":14,"column":15},"end":{"row":14,"column":24},"action":"insert","lines":["form_data"]}],[{"start":{"row":14,"column":24},"end":{"row":14,"column":26},"action":"insert","lines":["[]"],"id":22}],[{"start":{"row":14,"column":25},"end":{"row":14,"column":26},"action":"insert","lines":["‘"],"id":23},{"start":{"row":14,"column":26},"end":{"row":14,"column":27},"action":"insert","lines":["’"]}],[{"start":{"row":14,"column":26},"end":{"row":14,"column":27},"action":"remove","lines":["’"],"id":24},{"start":{"row":14,"column":25},"end":{"row":14,"column":26},"action":"remove","lines":["‘"]}],[{"start":{"row":14,"column":25},"end":{"row":14,"column":27},"action":"insert","lines":["''"],"id":25}],[{"start":{"row":14,"column":26},"end":{"row":14,"column":30},"action":"insert","lines":["name"],"id":26}],[{"start":{"row":14,"column":29},"end":{"row":14,"column":30},"action":"remove","lines":["e"],"id":27},{"start":{"row":14,"column":28},"end":{"row":14,"column":29},"action":"remove","lines":["m"]},{"start":{"row":14,"column":27},"end":{"row":14,"column":28},"action":"remove","lines":["a"]},{"start":{"row":14,"column":26},"end":{"row":14,"column":27},"action":"remove","lines":["n"]}],[{"start":{"row":14,"column":26},"end":{"row":14,"column":27},"action":"insert","lines":["N"],"id":28},{"start":{"row":14,"column":27},"end":{"row":14,"column":28},"action":"insert","lines":["a"]},{"start":{"row":14,"column":28},"end":{"row":14,"column":29},"action":"insert","lines":["m"]},{"start":{"row":14,"column":29},"end":{"row":14,"column":30},"action":"insert","lines":["e"]}],[{"start":{"row":15,"column":34},"end":{"row":15,"column":39},"action":"remove","lines":["Email"],"id":29}],[{"start":{"row":15,"column":34},"end":{"row":15,"column":35},"action":"insert","lines":["E"],"id":30},{"start":{"row":15,"column":35},"end":{"row":15,"column":36},"action":"insert","lines":["m"]},{"start":{"row":15,"column":36},"end":{"row":15,"column":37},"action":"insert","lines":["a"]},{"start":{"row":15,"column":37},"end":{"row":15,"column":38},"action":"insert","lines":["i"]}],[{"start":{"row":15,"column":17},"end":{"row":15,"column":44},"action":"remove","lines":["equest_body.get('Emai', '')"],"id":31},{"start":{"row":15,"column":16},"end":{"row":15,"column":17},"action":"remove","lines":["r"]}],[{"start":{"row":15,"column":16},"end":{"row":15,"column":33},"action":"insert","lines":["form_data['Name']"],"id":32}],[{"start":{"row":16,"column":19},"end":{"row":16,"column":51},"action":"remove","lines":["request_body.get('Category', '')"],"id":33}],[{"start":{"row":16,"column":19},"end":{"row":16,"column":36},"action":"insert","lines":["form_data['Name']"],"id":34}],[{"start":{"row":15,"column":27},"end":{"row":15,"column":31},"action":"remove","lines":["Name"],"id":35}],[{"start":{"row":15,"column":27},"end":{"row":15,"column":28},"action":"insert","lines":["E"],"id":36},{"start":{"row":15,"column":28},"end":{"row":15,"column":29},"action":"insert","lines":["m"]},{"start":{"row":15,"column":29},"end":{"row":15,"column":30},"action":"insert","lines":["a"]},{"start":{"row":15,"column":30},"end":{"row":15,"column":31},"action":"insert","lines":["i"]},{"start":{"row":15,"column":31},"end":{"row":15,"column":32},"action":"insert","lines":["l"]}],[{"start":{"row":16,"column":30},"end":{"row":16,"column":34},"action":"remove","lines":["Name"],"id":37}],[{"start":{"row":16,"column":30},"end":{"row":16,"column":31},"action":"insert","lines":["C"],"id":38},{"start":{"row":16,"column":31},"end":{"row":16,"column":32},"action":"insert","lines":["a"]},{"start":{"row":16,"column":32},"end":{"row":16,"column":33},"action":"insert","lines":["y"]},{"start":{"row":16,"column":33},"end":{"row":16,"column":34},"action":"insert","lines":["e"]},{"start":{"row":16,"column":34},"end":{"row":16,"column":35},"action":"insert","lines":["h"]},{"start":{"row":16,"column":35},"end":{"row":16,"column":36},"action":"insert","lines":["r"]}],[{"start":{"row":16,"column":35},"end":{"row":16,"column":36},"action":"remove","lines":["r"],"id":39},{"start":{"row":16,"column":34},"end":{"row":16,"column":35},"action":"remove","lines":["h"]},{"start":{"row":16,"column":33},"end":{"row":16,"column":34},"action":"remove","lines":["e"]},{"start":{"row":16,"column":32},"end":{"row":16,"column":33},"action":"remove","lines":["y"]}],[{"start":{"row":16,"column":32},"end":{"row":16,"column":33},"action":"insert","lines":["t"],"id":40},{"start":{"row":16,"column":33},"end":{"row":16,"column":34},"action":"insert","lines":["e"]},{"start":{"row":16,"column":34},"end":{"row":16,"column":35},"action":"insert","lines":["g"]},{"start":{"row":16,"column":35},"end":{"row":16,"column":36},"action":"insert","lines":["o"]},{"start":{"row":16,"column":36},"end":{"row":16,"column":37},"action":"insert","lines":["r"]},{"start":{"row":16,"column":37},"end":{"row":16,"column":38},"action":"insert","lines":["y"]}],[{"start":{"row":0,"column":0},"end":{"row":62,"column":0},"action":"remove","lines":["import json","import pymysql","import os","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","","def lambda_handler(event, context):","    try:","        # Retrieve form data from the event","        form_data = event","        name = form_data['Name']","        email = form_data['Email']","        category = form_data['Category']","","        # Initialize the database connection","        connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","","        with connection.cursor() as cursor:","            # Check if the email already exists in the database","            cursor.execute(\"SELECT Id FROM NotificationSubscribers WHERE Email = %s\", (email,))","            existing_subscriber = cursor.fetchone()","","            if existing_subscriber:","                # Email already exists, update the name and category","                cursor.execute(\"UPDATE NotificationSubscribers SET Name = %s, Category = %s WHERE Email = %s\",","                               (name, category, email))","            else:","                # Email does not exist, insert a new record","                cursor.execute(\"INSERT INTO NotificationSubscribers (Name, Email, Category) VALUES (%s, %s, %s)\",","                               (name, email, category))","","        # Commit the changes to the database","        connection.commit()","","        # Return a successful response","        return {","            'statusCode': 200,","            'body': json.dumps({\"message\": \"Subscription successful.\"}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    except Exception as e:","        # Handle exceptions and return a JSON error response","        error_message = str(e)","        return {","            'statusCode': 500,","            'body': json.dumps({\"error\": error_message}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    finally:","        # Make sure to close the database connection","        if 'connection' in locals() and connection is not None:","            connection.close()",""],"id":41}],[{"start":{"row":0,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["import json","import pymysql","import os","import boto3","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","sns_topic_arn = os.environ.get('SNS_TOPIC_ARN')  # Replace with your SNS topic ARN","","def lambda_handler(event, context):","    try:","        # Retrieve form data from the event","        form_data = event","        name = form_data['Name']","        email = form_data['Email']","        category = form_data['Category']","","        # Initialize the database connection","        connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","","        with connection.cursor() as cursor:","            # Check if the email already exists in the database","            cursor.execute(\"SELECT Id FROM NotificationSubscribers WHERE Email = %s\", (email,))","            existing_subscriber = cursor.fetchone()","","            if existing_subscriber:","                # Email already exists, update the name and category","                cursor.execute(\"UPDATE NotificationSubscribers SET Name = %s, Category = %s WHERE Email = %s\",","                               (name, category, email))","            else:","                # Email does not exist, insert a new record","                cursor.execute(\"INSERT INTO NotificationSubscribers (Name, Email, Category) VALUES (%s, %s, %s)\",","                               (name, email, category))","","        # Commit the changes to the database","        connection.commit()","","        # Subscribe the user's email to the SNS topic","        sns_client = boto3.client('sns', region_name='us-east-1')  # Replace with your desired region","        sns_client.subscribe(","            TopicArn=sns_topic_arn,","            Protocol='email',","            Endpoint=email","        )","","        # Return a successful response","        return {","            'statusCode': 200,","            'body': json.dumps({\"message\": \"Subscription successful.\"}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    except Exception as e:","        # Handle exceptions and return a JSON error response","        error_message = str(e)","        return {","            'statusCode': 500,","            'body': json.dumps({\"error\": error_message}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    finally:","        # Make sure to close the database connection","        if 'connection' in locals() and connection is not None:","            connection.close()",""],"id":42}],[{"start":{"row":10,"column":49},"end":{"row":10,"column":82},"action":"remove","lines":["# Replace with your SNS topic ARN"],"id":43},{"start":{"row":10,"column":48},"end":{"row":10,"column":49},"action":"remove","lines":[" "]}],[{"start":{"row":41,"column":67},"end":{"row":41,"column":101},"action":"remove","lines":["# Replace with your desired region"],"id":44}],[{"start":{"row":41,"column":67},"end":{"row":42,"column":0},"action":"insert","lines":["",""],"id":45},{"start":{"row":42,"column":0},"end":{"row":42,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":42,"column":8},"end":{"row":43,"column":0},"action":"insert","lines":["    response = sns_client.list_subscriptions_by_topic(TopicArn=topic_arn)",""],"id":46}],[{"start":{"row":42,"column":0},"end":{"row":42,"column":4},"action":"remove","lines":["    "],"id":47}],[{"start":{"row":42,"column":67},"end":{"row":42,"column":76},"action":"remove","lines":["topic_arn"],"id":48},{"start":{"row":42,"column":67},"end":{"row":42,"column":80},"action":"insert","lines":["sns_topic_arn"]}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":4},"action":"insert","lines":["    "],"id":49}],[{"start":{"row":43,"column":4},"end":{"row":43,"column":8},"action":"insert","lines":["    "],"id":50}],[{"start":{"row":43,"column":8},"end":{"row":44,"column":0},"action":"insert","lines":["",""],"id":51},{"start":{"row":44,"column":0},"end":{"row":44,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":44,"column":8},"end":{"row":62,"column":13},"action":"insert","lines":["# Check if the email address is already subscribed","    subscriptions = response.get('Subscriptions', [])","    for subscription in subscriptions:","        if subscription['Protocol'] == 'email' and subscription['Endpoint'] == email_address:","            print(f\"The email address {email_address} is already subscribed.\")","            return {","                'statusCode': 200,","                'body': \"Old\"","            }","            break","        else:","            print(f\"The email address {email_address} is not subscribed to the topic.\")","            ","            # Subscribe the email address to the topic","            response = sns_client.subscribe(","                TopicArn=topic_arn,","                Protocol='email',","                Endpoint=email_address","            )"],"id":52}],[{"start":{"row":62,"column":13},"end":{"row":63,"column":0},"action":"insert","lines":["",""],"id":53},{"start":{"row":63,"column":0},"end":{"row":63,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":45,"column":0},"end":{"row":45,"column":4},"action":"insert","lines":["    "],"id":54},{"start":{"row":46,"column":0},"end":{"row":46,"column":4},"action":"insert","lines":["    "]},{"start":{"row":47,"column":0},"end":{"row":47,"column":4},"action":"insert","lines":["    "]},{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"insert","lines":["    "]},{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"insert","lines":["    "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":4},"action":"insert","lines":["    "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"insert","lines":["    "]},{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"insert","lines":["    "]},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":4},"action":"insert","lines":["    "]},{"start":{"row":56,"column":0},"end":{"row":56,"column":4},"action":"insert","lines":["    "]},{"start":{"row":57,"column":0},"end":{"row":57,"column":4},"action":"insert","lines":["    "]},{"start":{"row":58,"column":0},"end":{"row":58,"column":4},"action":"insert","lines":["    "]},{"start":{"row":59,"column":0},"end":{"row":59,"column":4},"action":"insert","lines":["    "]},{"start":{"row":60,"column":0},"end":{"row":60,"column":4},"action":"insert","lines":["    "]},{"start":{"row":61,"column":0},"end":{"row":61,"column":4},"action":"insert","lines":["    "]},{"start":{"row":62,"column":0},"end":{"row":62,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":64,"column":0},"end":{"row":64,"column":4},"action":"insert","lines":["    "],"id":55},{"start":{"row":65,"column":0},"end":{"row":65,"column":4},"action":"insert","lines":["    "]},{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"insert","lines":["    "]},{"start":{"row":67,"column":0},"end":{"row":67,"column":4},"action":"insert","lines":["    "]},{"start":{"row":68,"column":0},"end":{"row":68,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":64,"column":0},"end":{"row":64,"column":4},"action":"remove","lines":["    "],"id":56},{"start":{"row":65,"column":0},"end":{"row":65,"column":4},"action":"remove","lines":["    "]},{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"remove","lines":["    "]},{"start":{"row":67,"column":0},"end":{"row":67,"column":4},"action":"remove","lines":["    "]},{"start":{"row":68,"column":0},"end":{"row":68,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":51,"column":20},"end":{"row":51,"column":33},"action":"remove","lines":["'body': \"Old\""],"id":57},{"start":{"row":51,"column":20},"end":{"row":54,"column":10},"action":"insert","lines":["'body': json.dumps({","            \"redirect_url\": \"index.html\",","            \"message\": {\"category\": \"success\", \"text\": \"Your donation has been added successfully\"}","        })"]}],[{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"insert","lines":["    "],"id":58},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"insert","lines":["    "],"id":59},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"insert","lines":["    "],"id":60},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":52,"column":0},"end":{"row":53,"column":0},"action":"remove","lines":["                        \"redirect_url\": \"index.html\",",""],"id":61}],[{"start":{"row":52,"column":35},"end":{"row":52,"column":111},"action":"remove","lines":["{\"category\": \"success\", \"text\": \"Your donation has been added successfully\"}"],"id":62}],[{"start":{"row":52,"column":35},"end":{"row":52,"column":37},"action":"insert","lines":["\"\""],"id":63}],[{"start":{"row":52,"column":36},"end":{"row":52,"column":37},"action":"insert","lines":["E"],"id":64},{"start":{"row":52,"column":37},"end":{"row":52,"column":38},"action":"insert","lines":["m"]},{"start":{"row":52,"column":38},"end":{"row":52,"column":39},"action":"insert","lines":["a"]},{"start":{"row":52,"column":39},"end":{"row":52,"column":40},"action":"insert","lines":["i"]},{"start":{"row":52,"column":40},"end":{"row":52,"column":41},"action":"insert","lines":["l"]}],[{"start":{"row":52,"column":41},"end":{"row":52,"column":42},"action":"insert","lines":[" "],"id":65},{"start":{"row":52,"column":42},"end":{"row":52,"column":43},"action":"insert","lines":["h"]},{"start":{"row":52,"column":43},"end":{"row":52,"column":44},"action":"insert","lines":["a"]},{"start":{"row":52,"column":44},"end":{"row":52,"column":45},"action":"insert","lines":["v"]},{"start":{"row":52,"column":45},"end":{"row":52,"column":46},"action":"insert","lines":["e"]}],[{"start":{"row":52,"column":45},"end":{"row":52,"column":46},"action":"remove","lines":["e"],"id":66},{"start":{"row":52,"column":44},"end":{"row":52,"column":45},"action":"remove","lines":["v"]},{"start":{"row":52,"column":43},"end":{"row":52,"column":44},"action":"remove","lines":["a"]},{"start":{"row":52,"column":42},"end":{"row":52,"column":43},"action":"remove","lines":["h"]}],[{"start":{"row":52,"column":42},"end":{"row":52,"column":43},"action":"insert","lines":["s"],"id":67},{"start":{"row":52,"column":43},"end":{"row":52,"column":44},"action":"insert","lines":["u"]},{"start":{"row":52,"column":44},"end":{"row":52,"column":45},"action":"insert","lines":["b"]},{"start":{"row":52,"column":45},"end":{"row":52,"column":46},"action":"insert","lines":["s"]},{"start":{"row":52,"column":46},"end":{"row":52,"column":47},"action":"insert","lines":["c"]},{"start":{"row":52,"column":47},"end":{"row":52,"column":48},"action":"insert","lines":["r"]},{"start":{"row":52,"column":48},"end":{"row":52,"column":49},"action":"insert","lines":["i"]}],[{"start":{"row":52,"column":49},"end":{"row":52,"column":50},"action":"insert","lines":["b"],"id":68},{"start":{"row":52,"column":50},"end":{"row":52,"column":51},"action":"insert","lines":["e"]},{"start":{"row":52,"column":51},"end":{"row":52,"column":52},"action":"insert","lines":["d"]}],[{"start":{"row":52,"column":52},"end":{"row":52,"column":53},"action":"insert","lines":[" "],"id":69},{"start":{"row":52,"column":53},"end":{"row":52,"column":54},"action":"insert","lines":["b"]},{"start":{"row":52,"column":54},"end":{"row":52,"column":55},"action":"insert","lines":["e"]},{"start":{"row":52,"column":55},"end":{"row":52,"column":56},"action":"insert","lines":["f"]},{"start":{"row":52,"column":56},"end":{"row":52,"column":57},"action":"insert","lines":["o"]},{"start":{"row":52,"column":57},"end":{"row":52,"column":58},"action":"insert","lines":["r"]},{"start":{"row":52,"column":58},"end":{"row":52,"column":59},"action":"insert","lines":["e"]}],[{"start":{"row":47,"column":83},"end":{"row":47,"column":96},"action":"remove","lines":["email_address"],"id":70},{"start":{"row":47,"column":83},"end":{"row":47,"column":88},"action":"insert","lines":["email"]}],[{"start":{"row":48,"column":43},"end":{"row":48,"column":56},"action":"remove","lines":["email_address"],"id":71},{"start":{"row":48,"column":43},"end":{"row":48,"column":48},"action":"insert","lines":["email"]}],[{"start":{"row":57,"column":43},"end":{"row":57,"column":56},"action":"remove","lines":["email_address"],"id":72},{"start":{"row":57,"column":43},"end":{"row":57,"column":48},"action":"insert","lines":["email"]}],[{"start":{"row":63,"column":29},"end":{"row":63,"column":42},"action":"remove","lines":["email_address"],"id":73},{"start":{"row":63,"column":29},"end":{"row":63,"column":34},"action":"insert","lines":["email"]}],[{"start":{"row":61,"column":29},"end":{"row":61,"column":38},"action":"remove","lines":["topic_arn"],"id":74},{"start":{"row":61,"column":29},"end":{"row":61,"column":42},"action":"insert","lines":["sns_topic_arn"]}],[{"start":{"row":66,"column":0},"end":{"row":70,"column":9},"action":"remove","lines":["        sns_client.subscribe(","            TopicArn=sns_topic_arn,","            Protocol='email',","            Endpoint=email","        )"],"id":75},{"start":{"row":65,"column":12},"end":{"row":66,"column":0},"action":"remove","lines":["",""]},{"start":{"row":65,"column":8},"end":{"row":65,"column":12},"action":"remove","lines":["    "]},{"start":{"row":65,"column":4},"end":{"row":65,"column":8},"action":"remove","lines":["    "]},{"start":{"row":65,"column":0},"end":{"row":65,"column":4},"action":"remove","lines":["    "]},{"start":{"row":64,"column":17},"end":{"row":65,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":55,"column":16},"end":{"row":55,"column":21},"action":"remove","lines":["break"],"id":77}],[{"start":{"row":55,"column":12},"end":{"row":55,"column":16},"action":"remove","lines":["    "],"id":78},{"start":{"row":55,"column":8},"end":{"row":55,"column":12},"action":"remove","lines":["    "]},{"start":{"row":55,"column":4},"end":{"row":55,"column":8},"action":"remove","lines":["    "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":4},"action":"remove","lines":["    "]},{"start":{"row":54,"column":17},"end":{"row":55,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":51,"column":28},"end":{"row":53,"column":22},"action":"remove","lines":["json.dumps({","                        \"message\": \"Email subscribed before\"","                    })"],"id":79}],[{"start":{"row":51,"column":28},"end":{"row":51,"column":30},"action":"insert","lines":["\"\""],"id":80}],[{"start":{"row":51,"column":29},"end":{"row":51,"column":30},"action":"insert","lines":["E"],"id":81},{"start":{"row":51,"column":30},"end":{"row":51,"column":31},"action":"insert","lines":["m"]},{"start":{"row":51,"column":31},"end":{"row":51,"column":32},"action":"insert","lines":["a"]},{"start":{"row":51,"column":32},"end":{"row":51,"column":33},"action":"insert","lines":["l"]}],[{"start":{"row":51,"column":33},"end":{"row":51,"column":34},"action":"insert","lines":[" "],"id":82}],[{"start":{"row":51,"column":33},"end":{"row":51,"column":34},"action":"remove","lines":[" "],"id":83},{"start":{"row":51,"column":32},"end":{"row":51,"column":33},"action":"remove","lines":["l"]}],[{"start":{"row":51,"column":32},"end":{"row":51,"column":33},"action":"insert","lines":["i"],"id":84},{"start":{"row":51,"column":33},"end":{"row":51,"column":34},"action":"insert","lines":["l"]}],[{"start":{"row":51,"column":34},"end":{"row":51,"column":35},"action":"insert","lines":[" "],"id":85},{"start":{"row":51,"column":35},"end":{"row":51,"column":36},"action":"insert","lines":["h"]}],[{"start":{"row":51,"column":36},"end":{"row":51,"column":37},"action":"insert","lines":["a"],"id":86},{"start":{"row":51,"column":37},"end":{"row":51,"column":38},"action":"insert","lines":["s"]}],[{"start":{"row":51,"column":38},"end":{"row":51,"column":39},"action":"insert","lines":[" "],"id":87},{"start":{"row":51,"column":39},"end":{"row":51,"column":40},"action":"insert","lines":["b"]},{"start":{"row":51,"column":40},"end":{"row":51,"column":41},"action":"insert","lines":["e"]},{"start":{"row":51,"column":41},"end":{"row":51,"column":42},"action":"insert","lines":["e"]},{"start":{"row":51,"column":42},"end":{"row":51,"column":43},"action":"insert","lines":["n"]}],[{"start":{"row":51,"column":43},"end":{"row":51,"column":44},"action":"insert","lines":[" "],"id":88},{"start":{"row":51,"column":44},"end":{"row":51,"column":45},"action":"insert","lines":["s"]},{"start":{"row":51,"column":45},"end":{"row":51,"column":46},"action":"insert","lines":["u"]},{"start":{"row":51,"column":46},"end":{"row":51,"column":47},"action":"insert","lines":["s"]},{"start":{"row":51,"column":47},"end":{"row":51,"column":48},"action":"insert","lines":["c"]},{"start":{"row":51,"column":48},"end":{"row":51,"column":49},"action":"insert","lines":["r"]},{"start":{"row":51,"column":49},"end":{"row":51,"column":50},"action":"insert","lines":["i"]}],[{"start":{"row":51,"column":50},"end":{"row":51,"column":51},"action":"insert","lines":["b"],"id":89},{"start":{"row":51,"column":51},"end":{"row":51,"column":52},"action":"insert","lines":["e"]},{"start":{"row":51,"column":52},"end":{"row":51,"column":53},"action":"insert","lines":["d"]}],[{"start":{"row":51,"column":35},"end":{"row":51,"column":44},"action":"remove","lines":["has been "],"id":90}],[{"start":{"row":51,"column":37},"end":{"row":51,"column":38},"action":"remove","lines":["s"],"id":91}],[{"start":{"row":51,"column":37},"end":{"row":51,"column":38},"action":"insert","lines":["b"],"id":92}],[{"start":{"row":51,"column":44},"end":{"row":51,"column":45},"action":"insert","lines":[" "],"id":93}],[{"start":{"row":51,"column":44},"end":{"row":51,"column":45},"action":"remove","lines":[" "],"id":94}],[{"start":{"row":66,"column":72},"end":{"row":67,"column":0},"action":"insert","lines":["",""],"id":95},{"start":{"row":67,"column":0},"end":{"row":67,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":67,"column":12},"end":{"row":70,"column":10},"action":"insert","lines":["'body': json.dumps({","            \"redirect_url\": \"index.html\",","            \"message\": {\"category\": \"success\", \"text\": \"Your donation has been added successfully\"}","        })"],"id":96}],[{"start":{"row":70,"column":8},"end":{"row":70,"column":12},"action":"insert","lines":["    "],"id":97}],[{"start":{"row":70,"column":12},"end":{"row":70,"column":16},"action":"insert","lines":["    "],"id":98}],[{"start":{"row":70,"column":0},"end":{"row":70,"column":4},"action":"remove","lines":["    "],"id":99}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":4},"action":"insert","lines":["    "],"id":100},{"start":{"row":69,"column":0},"end":{"row":69,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":69,"column":60},"end":{"row":69,"column":101},"action":"remove","lines":["Your donation has been added successfully"],"id":101},{"start":{"row":69,"column":60},"end":{"row":69,"column":84},"action":"insert","lines":["Subscription successful."]}],[{"start":{"row":69,"column":84},"end":{"row":69,"column":85},"action":"insert","lines":[" "],"id":102},{"start":{"row":69,"column":85},"end":{"row":69,"column":86},"action":"insert","lines":["P"]},{"start":{"row":69,"column":86},"end":{"row":69,"column":87},"action":"insert","lines":["l"]},{"start":{"row":69,"column":87},"end":{"row":69,"column":88},"action":"insert","lines":["e"]},{"start":{"row":69,"column":88},"end":{"row":69,"column":89},"action":"insert","lines":["a"]},{"start":{"row":69,"column":89},"end":{"row":69,"column":90},"action":"insert","lines":["s"]},{"start":{"row":69,"column":90},"end":{"row":69,"column":91},"action":"insert","lines":["e"]}],[{"start":{"row":69,"column":91},"end":{"row":69,"column":92},"action":"insert","lines":[" "],"id":103}],[{"start":{"row":69,"column":91},"end":{"row":69,"column":92},"action":"remove","lines":[" "],"id":104},{"start":{"row":69,"column":90},"end":{"row":69,"column":91},"action":"remove","lines":["e"]},{"start":{"row":69,"column":89},"end":{"row":69,"column":90},"action":"remove","lines":["s"]},{"start":{"row":69,"column":88},"end":{"row":69,"column":89},"action":"remove","lines":["a"]},{"start":{"row":69,"column":87},"end":{"row":69,"column":88},"action":"remove","lines":["e"]},{"start":{"row":69,"column":86},"end":{"row":69,"column":87},"action":"remove","lines":["l"]},{"start":{"row":69,"column":85},"end":{"row":69,"column":86},"action":"remove","lines":["P"]},{"start":{"row":69,"column":84},"end":{"row":69,"column":85},"action":"remove","lines":[" "]}],[{"start":{"row":66,"column":0},"end":{"row":67,"column":0},"action":"remove","lines":["            'body': json.dumps({\"message\": \"Subscription successful.\"}),",""],"id":105}],[{"start":{"row":70,"column":0},"end":{"row":73,"column":13},"action":"remove","lines":["            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }"],"id":106},{"start":{"row":69,"column":14},"end":{"row":70,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":51,"column":20},"end":{"row":51,"column":45},"action":"remove","lines":["'body': \"Email subcribed\""],"id":107}],[{"start":{"row":51,"column":20},"end":{"row":54,"column":14},"action":"insert","lines":["'body': json.dumps({","                \"redirect_url\": \"index.html\",","                \"message\": {\"category\": \"success\", \"text\": \"Subscription successful.\"}","            })"],"id":108}],[{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"insert","lines":["    "],"id":109},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"insert","lines":["    "],"id":110},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":0,"column":0},"end":{"row":89,"column":0},"action":"remove","lines":["import json","import pymysql","import os","import boto3","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","sns_topic_arn = os.environ.get('SNS_TOPIC_ARN') ","","def lambda_handler(event, context):","    try:","        # Retrieve form data from the event","        form_data = event","        name = form_data['Name']","        email = form_data['Email']","        category = form_data['Category']","","        # Initialize the database connection","        connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","","        with connection.cursor() as cursor:","            # Check if the email already exists in the database","            cursor.execute(\"SELECT Id FROM NotificationSubscribers WHERE Email = %s\", (email,))","            existing_subscriber = cursor.fetchone()","","            if existing_subscriber:","                # Email already exists, update the name and category","                cursor.execute(\"UPDATE NotificationSubscribers SET Name = %s, Category = %s WHERE Email = %s\",","                               (name, category, email))","            else:","                # Email does not exist, insert a new record","                cursor.execute(\"INSERT INTO NotificationSubscribers (Name, Email, Category) VALUES (%s, %s, %s)\",","                               (name, email, category))","","        # Commit the changes to the database","        connection.commit()","","        # Subscribe the user's email to the SNS topic","        sns_client = boto3.client('sns', region_name='us-east-1')  ","        response = sns_client.list_subscriptions_by_topic(TopicArn=sns_topic_arn)","        ","        # Check if the email address is already subscribed","        subscriptions = response.get('Subscriptions', [])","        for subscription in subscriptions:","            if subscription['Protocol'] == 'email' and subscription['Endpoint'] == email:","                print(f\"The email address {email} is already subscribed.\")","                return {","                    'statusCode': 200,","                    'body': json.dumps({","                        \"redirect_url\": \"index.html\",","                        \"message\": {\"category\": \"success\", \"text\": \"Subscription successful.\"}","                    })","                }","            else:","                print(f\"The email address {email} is not subscribed to the topic.\")","                ","                # Subscribe the email address to the topic","                response = sns_client.subscribe(","                    TopicArn=sns_topic_arn,","                    Protocol='email',","                    Endpoint=email","                )","","        # Return a successful response","        return {","            'statusCode': 200,","            'body': json.dumps({","                \"redirect_url\": \"index.html\",","                \"message\": {\"category\": \"success\", \"text\": \"Subscription successful.\"}","            })","        }","    except Exception as e:","        # Handle exceptions and return a JSON error response","        error_message = str(e)","        return {","            'statusCode': 500,","            'body': json.dumps({\"error\": error_message}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    finally:","        # Make sure to close the database connection","        if 'connection' in locals() and connection is not None:","            connection.close()",""],"id":111}],[{"start":{"row":0,"column":0},"end":{"row":89,"column":30},"action":"insert","lines":["import json","import pymysql","import os","import boto3","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","sns_topic_arn = os.environ.get('SNS_TOPIC_ARN') ","","def lambda_handler(event, context):","    try:","        # Retrieve form data from the event","        form_data = event","        name = form_data['Name']","        email = form_data['Email']","        category = form_data['Category']","        ","        print(\"EMAIL\", email)","        # Initialize the database connection","        connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","","        with connection.cursor() as cursor:","            # Check if the email already exists in the database","            cursor.execute(\"SELECT Id FROM NotificationSubscribers WHERE Email = %s\", (email,))","            existing_subscriber = cursor.fetchone()","","            if existing_subscriber:","                # Email already exists, update the name and category","                cursor.execute(\"UPDATE NotificationSubscribers SET Name = %s, Category = %s WHERE Email = %s\",","                               (name, category, email))","            else:","                # Email does not exist, insert a new record","                cursor.execute(\"INSERT INTO NotificationSubscribers (Name, Email, Category) VALUES (%s, %s, %s)\",","                               (name, email, category))","","        # Commit the changes to the database","        connection.commit()","","        # Subscribe the user's email to the SNS topic","        sns_client = boto3.client('sns', region_name='us-east-1')  ","        response = sns_client.list_subscriptions_by_topic(TopicArn=sns_topic_arn)","        ","        # Check if the email address is already subscribed","        subscriptions = response.get('Subscriptions', [])","        subBoolean = False","        for subscription in subscriptions:","            if subscription['Protocol'] == 'email' and subscription['Endpoint'] == email:","                print(f\"The email address {email} is already subscribed.\")","                subBoolean = True","                return {","                    'statusCode': 200,","                    'body': json.dumps({","                        \"redirect_url\": \"index.html\",","                        \"message\": {\"category\": \"success\", \"text\": \"Subscription successful.\"}","                    })","                }","          ","        if subBoolean == False:","            response = sns_client.subscribe(","                TopicArn=sns_topic_arn,","                Protocol='email',","                Endpoint=email","            )","","        # Return a successful response","        return {","            'statusCode': 200,","            'body': json.dumps({","                \"redirect_url\": \"index.html\",","                \"message\": {\"category\": \"success\", \"text\": \"Subscription successful.\"}","            })","        }","    except Exception as e:","        # Handle exceptions and return a JSON error response","        error_message = str(e)","        return {","            'statusCode': 500,","            'body': json.dumps({\"error\": error_message}),","            'headers': {","                'Content-Type': 'application/json',","                'Access-Control-Allow-Origin': '*'","            }","        }","    finally:","        # Make sure to close the database connection","        if 'connection' in locals() and connection is not None:","            connection.close()"],"id":112}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":19,"column":8},"end":{"row":19,"column":8},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1707217265593,"hash":"28fcb7508b203e73147b57adbef2735df8d97396"}