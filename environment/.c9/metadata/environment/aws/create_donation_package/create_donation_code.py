{"filter":false,"title":"create_donation_code.py","tooltip":"/aws/create_donation_package/create_donation_code.py","undoManager":{"mark":58,"position":58,"stack":[[{"start":{"row":0,"column":0},"end":{"row":47,"column":0},"action":"insert","lines":["import json","import pymysql","import os","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","","def lambda_handler(event, context):","    # Initialize the database connection","    connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","    ","    with connection.cursor(pymysql.cursors.DictCursor) as cursor:","        # Execute the SQL query","        cursor.execute(\"SELECT * FROM FoodItemCategories\")","        ","        # Fetch all the rows in a list of dictionaries","        result = cursor.fetchall()","","    # Make sure to close the database connection","    connection.close()","    ","    return {","        'statusCode': 200,","        'body': json.dumps(result),","        'headers': {","            'Content-Type': 'application/json',","            'Access-Control-Allow-Origin': '*'","        }","    }","    ","# To move this code into a zip file and save it in a S3 Bucket","# By Following this commands:","# Ensure in the /aws ","# 1. zip get_categories_code.zip get_categories_package","# 2. aws s3 cp get_categories_code.zip  s3://assignmentlambdabucket","","# To Create the Lambda Function","# python3 get_categories_wrapper.py","","#Package","# pip install pymysql -t .","#cd path/to/your/lambda_function_package","#zip -r9 ../get_categories_code.zip .","# aws s3 cp ../get_categories_code.zip s3://assignmentlambdabucket/",""],"id":31}],[{"start":{"row":33,"column":0},"end":{"row":46,"column":67},"action":"remove","lines":["# To move this code into a zip file and save it in a S3 Bucket","# By Following this commands:","# Ensure in the /aws ","# 1. zip get_categories_code.zip get_categories_package","# 2. aws s3 cp get_categories_code.zip  s3://assignmentlambdabucket","","# To Create the Lambda Function","# python3 get_categories_wrapper.py","","#Package","# pip install pymysql -t .","#cd path/to/your/lambda_function_package","#zip -r9 ../get_categories_code.zip .","# aws s3 cp ../get_categories_code.zip s3://assignmentlambdabucket/"],"id":32},{"start":{"row":32,"column":4},"end":{"row":33,"column":0},"action":"remove","lines":["",""]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"remove","lines":["    "]},{"start":{"row":31,"column":5},"end":{"row":32,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":31,"column":5},"action":"remove","lines":["import json","import pymysql","import os","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","","def lambda_handler(event, context):","    # Initialize the database connection","    connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","    ","    with connection.cursor(pymysql.cursors.DictCursor) as cursor:","        # Execute the SQL query","        cursor.execute(\"SELECT * FROM FoodItemCategories\")","        ","        # Fetch all the rows in a list of dictionaries","        result = cursor.fetchall()","","    # Make sure to close the database connection","    connection.close()","    ","    return {","        'statusCode': 200,","        'body': json.dumps(result),","        'headers': {","            'Content-Type': 'application/json',","            'Access-Control-Allow-Origin': '*'","        }","    }"],"id":33}],[{"start":{"row":0,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["import json","import pymysql","import os","import uuid","import boto3","from botocore.exceptions import ClientError","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","s3_bucket_name = os.environ.get('S3_BUCKET_NAME')","","def lambda_handler(event, context):","    # Connect to the database","    connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","    ","    # Parse the JSON body from the event","    form_data = json.loads(event['body'])","    food_item_data = form_data['FoodItem']","    ","    # Generate a unique filename for the S3 object","    unique_filename = str(uuid.uuid4()) + \"_\" + food_item_data['Image']['FileName']","    ","    # Decode the base64 image","    image_data = base64.b64decode(food_item_data['Image']['Base64'])","    ","    # Upload the image to S3","    try:","        s3_client = boto3.client('s3')","        s3_client.put_object(Bucket=s3_bucket_name, Key=unique_filename, Body=image_data, ContentType=food_item_data['Image']['ContentType'])","        public_access_url = f\"https://{s3_bucket_name}.s3.amazonaws.com/{unique_filename}\"","    except ClientError as e:","        print(f\"Failed to upload image to S3: {e}\")","        return {","            'statusCode': 500,","            'body': json.dumps({\"error\": \"Failed to upload image to S3\"})","        }","    ","    try:","        with connection.cursor() as cursor:","            # Insert the new attachment","            cursor.execute(","                \"INSERT INTO Attachments (FileName, ContentType, FileSize, FilePath, PublicAccessURL) VALUES (%s, %s, %s, %s, %s)\",","                (unique_filename, food_item_data['Image']['ContentType'], food_item_data['Image']['Size'], f\"/uploads/{unique_filename}\", public_access_url)","            )","            attachment_id = cursor.lastrowid","            ","            # Insert the new food item","            cursor.execute(","                \"INSERT INTO FoodItems (Name, Description, ExpiryDate, CategoryID, AttachmentID) VALUES (%s, %s, %s, %s, %s)\",","                (food_item_data['Name'], food_item_data['Description'], food_item_data['ExpiryDate'], food_item_data['CategoryID'], attachment_id)","            )","            food_item_id = cursor.lastrowid","            ","            # Insert the new donation","            cursor.execute(","                \"INSERT INTO Donations (Status, MeetUpLocation, UserId, Username, FoodItemID) VALUES (%s, %s, %s, %s, %s)\",","                ('ACTIVE', form_data['MeetUpLocation'], 'user_id_from_event', 'username_from_event', food_item_id)","            )","            ","            # Commit the transaction","            connection.commit()","            ","    finally:","        # Close the database connection","        connection.close()","    ","    # Return a successful response","    return {","        'statusCode': 200,","        'body': json.dumps({","            \"redirect_url\": \"/success-page-url\",","            \"message\": {\"category\": \"success\", \"text\": \"Your donation has been added successfully\"}","        })","    }",""],"id":34}],[{"start":{"row":4,"column":12},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":35},{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":["i"]},{"start":{"row":5,"column":1},"end":{"row":5,"column":2},"action":"insert","lines":["m"]},{"start":{"row":5,"column":2},"end":{"row":5,"column":3},"action":"insert","lines":["p"]},{"start":{"row":5,"column":3},"end":{"row":5,"column":4},"action":"insert","lines":["o"]}],[{"start":{"row":5,"column":3},"end":{"row":5,"column":4},"action":"remove","lines":["o"],"id":36},{"start":{"row":5,"column":2},"end":{"row":5,"column":3},"action":"remove","lines":["p"]},{"start":{"row":5,"column":2},"end":{"row":5,"column":13},"action":"insert","lines":["port base64"]}],[{"start":{"row":74,"column":29},"end":{"row":74,"column":46},"action":"remove","lines":["/success-page-url"],"id":37}],[{"start":{"row":74,"column":29},"end":{"row":74,"column":30},"action":"insert","lines":["i"],"id":38},{"start":{"row":74,"column":30},"end":{"row":74,"column":31},"action":"insert","lines":["n"]},{"start":{"row":74,"column":31},"end":{"row":74,"column":32},"action":"insert","lines":["d"]},{"start":{"row":74,"column":32},"end":{"row":74,"column":33},"action":"insert","lines":["e"]},{"start":{"row":74,"column":33},"end":{"row":74,"column":34},"action":"insert","lines":["x"]},{"start":{"row":74,"column":34},"end":{"row":74,"column":35},"action":"insert","lines":["."]}],[{"start":{"row":74,"column":35},"end":{"row":74,"column":36},"action":"insert","lines":["h"],"id":39},{"start":{"row":74,"column":36},"end":{"row":74,"column":37},"action":"insert","lines":["t"]},{"start":{"row":74,"column":37},"end":{"row":74,"column":38},"action":"insert","lines":["m"]},{"start":{"row":74,"column":38},"end":{"row":74,"column":39},"action":"insert","lines":["l"]}],[{"start":{"row":79,"column":0},"end":{"row":79,"column":36},"action":"insert","lines":["zip -r9 ../get_categories_code.zip ."],"id":40}],[{"start":{"row":79,"column":24},"end":{"row":79,"column":25},"action":"remove","lines":["s"],"id":41},{"start":{"row":79,"column":23},"end":{"row":79,"column":24},"action":"remove","lines":["e"]},{"start":{"row":79,"column":22},"end":{"row":79,"column":23},"action":"remove","lines":["i"]},{"start":{"row":79,"column":21},"end":{"row":79,"column":22},"action":"remove","lines":["r"]},{"start":{"row":79,"column":20},"end":{"row":79,"column":21},"action":"remove","lines":["o"]},{"start":{"row":79,"column":19},"end":{"row":79,"column":20},"action":"remove","lines":["g"]},{"start":{"row":79,"column":18},"end":{"row":79,"column":19},"action":"remove","lines":["e"]},{"start":{"row":79,"column":17},"end":{"row":79,"column":18},"action":"remove","lines":["t"]},{"start":{"row":79,"column":16},"end":{"row":79,"column":17},"action":"remove","lines":["a"]},{"start":{"row":79,"column":15},"end":{"row":79,"column":16},"action":"remove","lines":["c"]}],[{"start":{"row":79,"column":13},"end":{"row":79,"column":14},"action":"remove","lines":["t"],"id":42},{"start":{"row":79,"column":12},"end":{"row":79,"column":13},"action":"remove","lines":["e"]},{"start":{"row":79,"column":11},"end":{"row":79,"column":12},"action":"remove","lines":["g"]}],[{"start":{"row":79,"column":11},"end":{"row":79,"column":12},"action":"insert","lines":["c"],"id":43},{"start":{"row":79,"column":12},"end":{"row":79,"column":13},"action":"insert","lines":["r"]},{"start":{"row":79,"column":13},"end":{"row":79,"column":14},"action":"insert","lines":["e"]},{"start":{"row":79,"column":14},"end":{"row":79,"column":15},"action":"insert","lines":["a"]},{"start":{"row":79,"column":15},"end":{"row":79,"column":16},"action":"insert","lines":["t"]},{"start":{"row":79,"column":16},"end":{"row":79,"column":17},"action":"insert","lines":["e"]},{"start":{"row":79,"column":17},"end":{"row":79,"column":18},"action":"insert","lines":["t"]}],[{"start":{"row":79,"column":17},"end":{"row":79,"column":18},"action":"remove","lines":["t"],"id":44}],[{"start":{"row":79,"column":18},"end":{"row":79,"column":19},"action":"insert","lines":["d"],"id":45},{"start":{"row":79,"column":19},"end":{"row":79,"column":20},"action":"insert","lines":["o"]},{"start":{"row":79,"column":20},"end":{"row":79,"column":21},"action":"insert","lines":["n"]},{"start":{"row":79,"column":21},"end":{"row":79,"column":22},"action":"insert","lines":["a"]},{"start":{"row":79,"column":22},"end":{"row":79,"column":23},"action":"insert","lines":["t"]},{"start":{"row":79,"column":23},"end":{"row":79,"column":24},"action":"insert","lines":["i"]},{"start":{"row":79,"column":24},"end":{"row":79,"column":25},"action":"insert","lines":["o"]},{"start":{"row":79,"column":25},"end":{"row":79,"column":26},"action":"insert","lines":["n"]}],[{"start":{"row":78,"column":0},"end":{"row":79,"column":37},"action":"remove","lines":["","zip -r9 ../create_donation_code.zip ."],"id":46}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["import uuid",""],"id":47}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":48}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["i"],"id":49},{"start":{"row":6,"column":1},"end":{"row":6,"column":2},"action":"insert","lines":["m"]}],[{"start":{"row":6,"column":2},"end":{"row":6,"column":3},"action":"insert","lines":["p"],"id":50},{"start":{"row":6,"column":3},"end":{"row":6,"column":4},"action":"insert","lines":["o"]},{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"insert","lines":["r"]},{"start":{"row":6,"column":5},"end":{"row":6,"column":6},"action":"insert","lines":["t"]}],[{"start":{"row":6,"column":6},"end":{"row":6,"column":7},"action":"insert","lines":[" "],"id":51},{"start":{"row":6,"column":7},"end":{"row":6,"column":8},"action":"insert","lines":["u"]},{"start":{"row":6,"column":8},"end":{"row":6,"column":9},"action":"insert","lines":["u"]}],[{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["i"],"id":52},{"start":{"row":6,"column":10},"end":{"row":6,"column":11},"action":"insert","lines":["d"]}],[{"start":{"row":31,"column":38},"end":{"row":32,"column":0},"action":"insert","lines":["",""],"id":54},{"start":{"row":32,"column":0},"end":{"row":32,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":32,"column":8},"end":{"row":32,"column":32},"action":"insert","lines":["folder_path = \"uploads/\""],"id":55}],[{"start":{"row":32,"column":32},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":56},{"start":{"row":33,"column":0},"end":{"row":33,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":33,"column":8},"end":{"row":35,"column":66},"action":"insert","lines":["s3.upload_fileobj(file_data, bucket_name, ","                          f\"{folder_path}{file_name}\", ","                          ExtraArgs={'ContentType': content_type})"],"id":57}],[{"start":{"row":35,"column":66},"end":{"row":36,"column":0},"action":"insert","lines":["",""],"id":59},{"start":{"row":36,"column":0},"end":{"row":36,"column":26},"action":"insert","lines":["                          "]}],[{"start":{"row":33,"column":26},"end":{"row":33,"column":35},"action":"remove","lines":["file_data"],"id":60},{"start":{"row":33,"column":26},"end":{"row":33,"column":36},"action":"insert","lines":["image_data"]}],[{"start":{"row":35,"column":52},"end":{"row":35,"column":64},"action":"remove","lines":["content_type"],"id":61},{"start":{"row":35,"column":52},"end":{"row":35,"column":90},"action":"insert","lines":["food_item_data['Image']['ContentType']"]}],[{"start":{"row":34,"column":42},"end":{"row":34,"column":51},"action":"remove","lines":["file_name"],"id":62},{"start":{"row":34,"column":42},"end":{"row":34,"column":57},"action":"insert","lines":["unique_filename"]}],[{"start":{"row":33,"column":38},"end":{"row":33,"column":49},"action":"remove","lines":["bucket_name"],"id":63},{"start":{"row":33,"column":38},"end":{"row":33,"column":52},"action":"insert","lines":["s3_bucket_name"]}],[{"start":{"row":37,"column":0},"end":{"row":38,"column":0},"action":"remove","lines":["        s3_client.put_object(Bucket=s3_bucket_name, Key=unique_filename, Body=image_data, ContentType=food_item_data['Image']['ContentType'])",""],"id":64}],[{"start":{"row":32,"column":29},"end":{"row":32,"column":30},"action":"remove","lines":["s"],"id":65},{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"remove","lines":["d"]},{"start":{"row":32,"column":27},"end":{"row":32,"column":28},"action":"remove","lines":["a"]},{"start":{"row":32,"column":26},"end":{"row":32,"column":27},"action":"remove","lines":["o"]},{"start":{"row":32,"column":25},"end":{"row":32,"column":26},"action":"remove","lines":["l"]},{"start":{"row":32,"column":24},"end":{"row":32,"column":25},"action":"remove","lines":["p"]},{"start":{"row":32,"column":23},"end":{"row":32,"column":24},"action":"remove","lines":["u"]}],[{"start":{"row":32,"column":23},"end":{"row":32,"column":24},"action":"insert","lines":["a"],"id":66},{"start":{"row":32,"column":24},"end":{"row":32,"column":25},"action":"insert","lines":["s"]},{"start":{"row":32,"column":25},"end":{"row":32,"column":26},"action":"insert","lines":["s"]},{"start":{"row":32,"column":26},"end":{"row":32,"column":27},"action":"insert","lines":["e"]},{"start":{"row":32,"column":27},"end":{"row":32,"column":28},"action":"insert","lines":["t"]},{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"insert","lines":["s"]}],[{"start":{"row":32,"column":30},"end":{"row":32,"column":31},"action":"insert","lines":["u"],"id":67},{"start":{"row":32,"column":31},"end":{"row":32,"column":32},"action":"insert","lines":["p"]},{"start":{"row":32,"column":32},"end":{"row":32,"column":33},"action":"insert","lines":["l"]},{"start":{"row":32,"column":33},"end":{"row":32,"column":34},"action":"insert","lines":["o"]},{"start":{"row":32,"column":34},"end":{"row":32,"column":35},"action":"insert","lines":["a"]},{"start":{"row":32,"column":35},"end":{"row":32,"column":36},"action":"insert","lines":["d"]},{"start":{"row":32,"column":36},"end":{"row":32,"column":37},"action":"insert","lines":["s"]}],[{"start":{"row":33,"column":8},"end":{"row":33,"column":10},"action":"remove","lines":["s3"],"id":68},{"start":{"row":33,"column":8},"end":{"row":33,"column":17},"action":"insert","lines":["s3_client"]}],[{"start":{"row":32,"column":37},"end":{"row":32,"column":38},"action":"insert","lines":["/"],"id":69}],[{"start":{"row":50,"column":109},"end":{"row":50,"column":110},"action":"insert","lines":["a"],"id":70},{"start":{"row":50,"column":110},"end":{"row":50,"column":111},"action":"insert","lines":["s"]},{"start":{"row":50,"column":111},"end":{"row":50,"column":112},"action":"insert","lines":["s"]}],[{"start":{"row":50,"column":112},"end":{"row":50,"column":113},"action":"insert","lines":["e"],"id":71},{"start":{"row":50,"column":113},"end":{"row":50,"column":114},"action":"insert","lines":["t"]},{"start":{"row":50,"column":114},"end":{"row":50,"column":115},"action":"insert","lines":["s"]}],[{"start":{"row":37,"column":72},"end":{"row":37,"column":73},"action":"insert","lines":["a"],"id":72},{"start":{"row":37,"column":73},"end":{"row":37,"column":74},"action":"insert","lines":["s"]},{"start":{"row":37,"column":74},"end":{"row":37,"column":75},"action":"insert","lines":["s"]}],[{"start":{"row":37,"column":75},"end":{"row":37,"column":76},"action":"insert","lines":["e"],"id":73},{"start":{"row":37,"column":76},"end":{"row":37,"column":77},"action":"insert","lines":["t"]},{"start":{"row":37,"column":77},"end":{"row":37,"column":78},"action":"insert","lines":["s"]},{"start":{"row":37,"column":78},"end":{"row":37,"column":79},"action":"insert","lines":["/"]}],[{"start":{"row":37,"column":79},"end":{"row":37,"column":80},"action":"insert","lines":["u"],"id":74},{"start":{"row":37,"column":80},"end":{"row":37,"column":81},"action":"insert","lines":["p"]},{"start":{"row":37,"column":81},"end":{"row":37,"column":82},"action":"insert","lines":["l"]},{"start":{"row":37,"column":82},"end":{"row":37,"column":83},"action":"insert","lines":["o"]},{"start":{"row":37,"column":83},"end":{"row":37,"column":84},"action":"insert","lines":["a"]},{"start":{"row":37,"column":84},"end":{"row":37,"column":85},"action":"insert","lines":["d"]},{"start":{"row":37,"column":85},"end":{"row":37,"column":86},"action":"insert","lines":["s"]}],[{"start":{"row":37,"column":86},"end":{"row":37,"column":87},"action":"insert","lines":["/"],"id":75}],[{"start":{"row":20,"column":16},"end":{"row":20,"column":27},"action":"remove","lines":["json.loads("],"id":76}],[{"start":{"row":20,"column":29},"end":{"row":20,"column":30},"action":"remove","lines":[")"],"id":77}],[{"start":{"row":20,"column":21},"end":{"row":20,"column":29},"action":"remove","lines":["['body']"],"id":78}],[{"start":{"row":6,"column":11},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":79}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"remove","lines":["import json","import pymysql","import os","import boto3","import base64","from botocore.exceptions import ClientError","import uuid","","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","s3_bucket_name = os.environ.get('S3_BUCKET_NAME')","","def lambda_handler(event, context):","    # Connect to the database","    connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","    ","    # Parse the JSON body from the event","    form_data = event","    food_item_data = form_data['FoodItem']","    ","    # Generate a unique filename for the S3 object","    unique_filename = str(uuid.uuid4()) + \"_\" + food_item_data['Image']['FileName']","    ","    # Decode the base64 image","    image_data = base64.b64decode(food_item_data['Image']['Base64'])","    ","    # Upload the image to S3","    try:","        s3_client = boto3.client('s3')","        folder_path = \"assets/uploads/\"","        s3_client.upload_fileobj(image_data, s3_bucket_name, ","                          f\"{folder_path}{unique_filename}\", ","                          ExtraArgs={'ContentType': food_item_data['Image']['ContentType']})","                          ","        public_access_url = f\"https://{s3_bucket_name}.s3.amazonaws.com/assets/uploads/{unique_filename}\"","    except ClientError as e:","        print(f\"Failed to upload image to S3: {e}\")","        return {","            'statusCode': 500,","            'body': json.dumps({\"error\": \"Failed to upload image to S3\"})","        }","    ","    try:","        with connection.cursor() as cursor:","            # Insert the new attachment","            cursor.execute(","                \"INSERT INTO Attachments (FileName, ContentType, FileSize, FilePath, PublicAccessURL) VALUES (%s, %s, %s, %s, %s)\",","                (unique_filename, food_item_data['Image']['ContentType'], food_item_data['Image']['Size'], f\"assets/uploads/{unique_filename}\", public_access_url)","            )","            attachment_id = cursor.lastrowid","            ","            # Insert the new food item","            cursor.execute(","                \"INSERT INTO FoodItems (Name, Description, ExpiryDate, CategoryID, AttachmentID) VALUES (%s, %s, %s, %s, %s)\",","                (food_item_data['Name'], food_item_data['Description'], food_item_data['ExpiryDate'], food_item_data['CategoryID'], attachment_id)","            )","            food_item_id = cursor.lastrowid","            ","            # Insert the new donation","            cursor.execute(","                \"INSERT INTO Donations (Status, MeetUpLocation, UserId, Username, FoodItemID) VALUES (%s, %s, %s, %s, %s)\",","                ('ACTIVE', form_data['MeetUpLocation'], 'user_id_from_event', 'username_from_event', food_item_id)","            )","            ","            # Commit the transaction","            connection.commit()","            ","    finally:","        # Close the database connection","        connection.close()","    ","    # Return a successful response","    return {","        'statusCode': 200,","        'body': json.dumps({","            \"redirect_url\": \"index.html\",","            \"message\": {\"category\": \"success\", \"text\": \"Your donation has been added successfully\"}","        })","    }",""],"id":81},{"start":{"row":0,"column":0},"end":{"row":86,"column":0},"action":"insert","lines":["import json","import pymysql","import os","import boto3","import base64","from botocore.exceptions import ClientError","import uuid","from io import BytesIO","","","# Environment variables would be set in your Lambda function's configuration","db_host = os.environ.get('RDS_HOST')","db_user = os.environ.get('RDS_USER')","db_password = os.environ.get('RDS_PASSWORD')","db_name = os.environ.get('RDS_DB_NAME')","s3_bucket_name = os.environ.get('S3_BUCKET_NAME')","","def lambda_handler(event, context):","    # Connect to the database","    connection = pymysql.connect(host=db_host, user=db_user, passwd=db_password, db=db_name)","    ","    # Parse the JSON body from the event","    form_data = event['body']","    food_item_data = form_data['FoodItem']","    ","    # Generate a unique filename for the S3 object","    unique_filename = str(uuid.uuid4()) + \"_\" + food_item_data['Image']['FileName']","    ","    # Decode the base64 image","    image_data = base64.b64decode(food_item_data['Image']['Base64'])","    ","    image_fileobj = BytesIO(image_data)","","    # Upload the image to S3","    try:","        s3_client = boto3.client('s3')","        folder_path = \"assets/uploads/\"","        s3_client.upload_fileobj(image_fileobj, s3_bucket_name, ","                          f\"{folder_path}{unique_filename}\", ","                          ExtraArgs={'ContentType': food_item_data['Image']['ContentType']})","                          ","        public_access_url = f\"https://{s3_bucket_name}.s3.amazonaws.com/assets/uploads/{unique_filename}\"","    except ClientError as e:","        print(f\"Failed to upload image to S3: {e}\")","        return {","            'statusCode': 500,","            'body': json.dumps({\"error\": \"Failed to upload image to S3\"})","        }","    ","    try:","        with connection.cursor() as cursor:","            # Insert the new attachment","            cursor.execute(","                \"INSERT INTO Attachments (FileName, ContentType, FileSize, FilePath, PublicAccessURL) VALUES (%s, %s, %s, %s, %s)\",","                (unique_filename, food_item_data['Image']['ContentType'], food_item_data['Image']['Size'], f\"assets/uploads/{unique_filename}\", public_access_url)","            )","            attachment_id = cursor.lastrowid","            ","            # Insert the new food item","            cursor.execute(","                \"INSERT INTO FoodItems (Name, Description, ExpiryDate, CategoryID, AttachmentID) VALUES (%s, %s, %s, %s, %s)\",","                (food_item_data['Name'], food_item_data['Description'], food_item_data['ExpiryDate'], food_item_data['CategoryID'], attachment_id)","            )","            food_item_id = cursor.lastrowid","            ","            # Insert the new donation","            cursor.execute(","                \"INSERT INTO Donations (Status, MeetUpLocation, UserId, Username, FoodItemID) VALUES (%s, %s, %s, %s, %s)\",","                ('ACTIVE', form_data['MeetUpLocation'], 'user_id_from_event', 'username_from_event', food_item_id)","            )","            ","            # Commit the transaction","            connection.commit()","            ","    finally:","        # Close the database connection","        connection.close()","    ","    # Return a successful response","    return {","        'statusCode': 200,","        'body': json.dumps({","            \"redirect_url\": \"index.html\",","            \"message\": {\"category\": \"success\", \"text\": \"Your donation has been added successfully\"}","        })","    }",""]}],[{"start":{"row":22,"column":28},"end":{"row":22,"column":29},"action":"remove","lines":["]"],"id":82},{"start":{"row":22,"column":27},"end":{"row":22,"column":28},"action":"remove","lines":["'"]},{"start":{"row":22,"column":26},"end":{"row":22,"column":27},"action":"remove","lines":["y"]},{"start":{"row":22,"column":25},"end":{"row":22,"column":26},"action":"remove","lines":["d"]},{"start":{"row":22,"column":24},"end":{"row":22,"column":25},"action":"remove","lines":["o"]},{"start":{"row":22,"column":23},"end":{"row":22,"column":24},"action":"remove","lines":["b"]},{"start":{"row":22,"column":22},"end":{"row":22,"column":23},"action":"remove","lines":["'"]},{"start":{"row":22,"column":21},"end":{"row":22,"column":22},"action":"remove","lines":["["]}],[{"start":{"row":68,"column":57},"end":{"row":68,"column":75},"action":"remove","lines":["user_id_from_event"],"id":83}],[{"start":{"row":68,"column":57},"end":{"row":68,"column":58},"action":"insert","lines":["1"],"id":84},{"start":{"row":68,"column":58},"end":{"row":68,"column":59},"action":"insert","lines":["1"]},{"start":{"row":68,"column":59},"end":{"row":68,"column":60},"action":"insert","lines":["1"]}],[{"start":{"row":68,"column":59},"end":{"row":68,"column":60},"action":"remove","lines":["1"],"id":85},{"start":{"row":68,"column":58},"end":{"row":68,"column":59},"action":"remove","lines":["1"]},{"start":{"row":68,"column":57},"end":{"row":68,"column":58},"action":"remove","lines":["1"]}],[{"start":{"row":68,"column":57},"end":{"row":68,"column":58},"action":"insert","lines":["2"],"id":86},{"start":{"row":68,"column":58},"end":{"row":68,"column":59},"action":"insert","lines":["1"]},{"start":{"row":68,"column":59},"end":{"row":68,"column":60},"action":"insert","lines":["1"]},{"start":{"row":68,"column":60},"end":{"row":68,"column":61},"action":"insert","lines":["2"]},{"start":{"row":68,"column":61},"end":{"row":68,"column":62},"action":"insert","lines":["8"]},{"start":{"row":68,"column":62},"end":{"row":68,"column":63},"action":"insert","lines":["3"]},{"start":{"row":68,"column":63},"end":{"row":68,"column":64},"action":"insert","lines":["E"]}],[{"start":{"row":68,"column":86},"end":{"row":68,"column":87},"action":"remove","lines":["t"],"id":87},{"start":{"row":68,"column":85},"end":{"row":68,"column":86},"action":"remove","lines":["n"]},{"start":{"row":68,"column":84},"end":{"row":68,"column":85},"action":"remove","lines":["e"]},{"start":{"row":68,"column":83},"end":{"row":68,"column":84},"action":"remove","lines":["v"]},{"start":{"row":68,"column":82},"end":{"row":68,"column":83},"action":"remove","lines":["e"]},{"start":{"row":68,"column":81},"end":{"row":68,"column":82},"action":"remove","lines":["_"]},{"start":{"row":68,"column":80},"end":{"row":68,"column":81},"action":"remove","lines":["m"]},{"start":{"row":68,"column":79},"end":{"row":68,"column":80},"action":"remove","lines":["o"]},{"start":{"row":68,"column":78},"end":{"row":68,"column":79},"action":"remove","lines":["r"]},{"start":{"row":68,"column":77},"end":{"row":68,"column":78},"action":"remove","lines":["f"]},{"start":{"row":68,"column":76},"end":{"row":68,"column":77},"action":"remove","lines":["_"]},{"start":{"row":68,"column":75},"end":{"row":68,"column":76},"action":"remove","lines":["e"]},{"start":{"row":68,"column":74},"end":{"row":68,"column":75},"action":"remove","lines":["m"]},{"start":{"row":68,"column":73},"end":{"row":68,"column":74},"action":"remove","lines":["a"]},{"start":{"row":68,"column":72},"end":{"row":68,"column":73},"action":"remove","lines":["n"]},{"start":{"row":68,"column":71},"end":{"row":68,"column":72},"action":"remove","lines":["r"]},{"start":{"row":68,"column":70},"end":{"row":68,"column":71},"action":"remove","lines":["e"]},{"start":{"row":68,"column":69},"end":{"row":68,"column":70},"action":"remove","lines":["s"]},{"start":{"row":68,"column":68},"end":{"row":68,"column":69},"action":"remove","lines":["u"]}],[{"start":{"row":68,"column":68},"end":{"row":68,"column":69},"action":"insert","lines":["L"],"id":88},{"start":{"row":68,"column":69},"end":{"row":68,"column":70},"action":"insert","lines":["I"]},{"start":{"row":68,"column":70},"end":{"row":68,"column":71},"action":"insert","lines":["u"]}],[{"start":{"row":68,"column":71},"end":{"row":68,"column":72},"action":"insert","lines":[" "],"id":89}],[{"start":{"row":68,"column":71},"end":{"row":68,"column":72},"action":"remove","lines":[" "],"id":90},{"start":{"row":68,"column":70},"end":{"row":68,"column":71},"action":"remove","lines":["u"]},{"start":{"row":68,"column":69},"end":{"row":68,"column":70},"action":"remove","lines":["I"]}],[{"start":{"row":68,"column":69},"end":{"row":68,"column":71},"action":"insert","lines":["iu"],"id":91}],[{"start":{"row":68,"column":71},"end":{"row":68,"column":72},"action":"insert","lines":[" "],"id":92},{"start":{"row":68,"column":72},"end":{"row":68,"column":73},"action":"insert","lines":["J"]},{"start":{"row":68,"column":73},"end":{"row":68,"column":74},"action":"insert","lines":["i"]},{"start":{"row":68,"column":74},"end":{"row":68,"column":75},"action":"insert","lines":["a"]},{"start":{"row":68,"column":75},"end":{"row":68,"column":76},"action":"insert","lines":["J"]},{"start":{"row":68,"column":76},"end":{"row":68,"column":77},"action":"insert","lines":["u"]},{"start":{"row":68,"column":77},"end":{"row":68,"column":78},"action":"insert","lines":["n"]}]]},"ace":{"folds":[],"scrolltop":800.0000211927631,"scrollleft":0,"selection":{"start":{"row":81,"column":8},"end":{"row":84,"column":10},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":56,"state":"start","mode":"ace/mode/python"}},"timestamp":1707134873605,"hash":"7443dd201cd90cd18e0c2d890c9356283d5390db"}